name: CI/CD - Build, Test, and Deploy Tic Tac Toe

on:
  push:
    branches:
      - main
    tags:
      - v*        # Trigger CD for tags like v1.0.0
  pull_request:   # Run CI for PRs too

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake libgtest-dev qtbase5-dev

      - name: 🧪 Build Google Test
        run: |
          cd /usr/src/gtest
          sudo cmake .
          sudo make
          sudo cp lib/*.a /usr/lib

      - name: 🧼 Clean previous build if exists
        run: rm -rf build

      - name: 🏗️ Configure project with CMake
        run: cmake -S . -B build

      - name: 🔨 Build project
        run: cmake --build build

      - name: 🧪 Run Google Tests
        run: |
          cd build
          ctest --output-on-failure

      - name: 📤 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/Testing/Temporary/LastTest.log

      - name: 📦 Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: tictactoe-executable
          path: build/TicTacToe

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download Executable Artifact
        uses: actions/download-artifact@v4
        with:
          name: tictactoe-executable
          path: ./artifact/

      - name: 🛠️ Make Executable
        run: chmod +x ./artifact/TicTacToe

      - name: 📝 Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: 📤 Upload Release Binary
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/TicTacToe
          asset_name: TicTacToe-${{ github.ref_name }}-linux
          asset_content_type: application/octet-stream
